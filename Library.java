import java.util.Date;
import java.util.List;

public class Library {
    private String name;
    private List<Loan> loans = new java.util.ArrayList<>();
    private List<Member> members = new java.util.ArrayList<>();
    private List<Book> books = new java.util.ArrayList<>();

    // Member Id is autogenerated
    private int memberIdCounter=1;

    public Library(String name){
        this.name=name;
        System.out.println("Library with name : "+name+" created.");
    }

    public String getName(){
        return this.name;
    }

    public void addBook(String title, String author){
        Book book = new Book(title,author);
        books.add(book);
        
    }

    public void returnBook(String title, Member member){
        Book book = findBookByTitle(title);
        for(Loan loan: loans){
            if(loan.getBook().getTitle().equals(title) && loan.getMember().getId(member) == member.getId(member)){
                book.returnBook();
                loan.setReturnDate(new Date());
                System.out.println("Book returned: "+title+" by member: "+member.getName(member));
                loans.remove(loan);
                return;
            }
        }
        System.out.println("No matching loan found for book: "+title+" and member: "+member.getName(member));

    }

    public Member registerMember(String name){
        Member member = new Member(memberIdCounter,name, this);
        members.add(member);
        memberIdCounter+=1;

        return member;
    }

    public void issueLoan(String bookTitle, int memberId){
        Book book = findBookByTitle(bookTitle);
        Member member = findMemberById(memberId);
        
        if(book != null && member != null && book.isAvailable()){
            book.issueBook();
            Loan loan = new Loan(new Date(), null, book, member);
            loans.add(loan);
        } else {
            System.out.println("Book with Title : "+bookTitle+" is not available" );
        }
    }

    private Member findMemberById(int memberId) {
        for(Member member: members){
            if(member.getId(member) == memberId){
                return member;
            }
        }
        return null;
    }


    public Book findBookByTitle(String title){
        for(Book book: books){
            if(book.getTitle().equals(title)){
                return book;
            }
        }
        return null;
    }


}
